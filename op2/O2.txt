科目名: プログラミング実習III
課題: O2
番号: 37022443
氏名: 黒川良太
作成: 1/15

----------------------------------------

[課題]
f(x) = ax2 + bx + c (ただし a≠0) に対して, 下記の「ニュートン・ラフソン法」により f(x) = 0 の解を求める関数 double newton(double a, double b, double c, double x0, double eps, int max_repeat) を作成せよ. ただし, x0 は近似解の初期値, eps は許容誤差, max_repeat は収束計算の繰り返し回数の上限である.

【ニュートン・ラフソン法】
関数 f(x) が連続で導関数 f'(x) を持つとする. 下図のように, 適当な初期値 x0 に対し, y=f(x) の x0 における接線を考え, この接線と x 軸の交点の x 座標を x1 とする. x1 は, x1 = x0 - f(x0)/f'(x0) により求められる. このようにして得られた x1 を 新たに x0 と考えて, 同様の手順で新たな x1 を求める, という作業を繰り返すと, x1 の値は f(x)=0 の解の値に収束する. これにより方程式の求解を行うのがニュートン・ラフソン法である. 

解の収束判定は, |x1-x0|<eps により行え. (この条件が成立したとき x1 の値を返すようにせよ.)
関数 newton は newton.c というファイルに格納せよ. 関数 newton のプロトタイプ宣言を格納した下記の newton.h をインクルードせよ. 下記の newton_main.c と newton.c をリンクして実行できるようにせよ.

結果　
0.26794919243112269580
 0.41886116991581029412
 0.41886116991581034963

----------------------------------------

[課題]
お見合いの戦略を考えるための， 次のようなシミュレーションを行うプログラム omiai.c を作成せよ． 設定は次の通りとする.

自分のレベル x は 1〜5 の 5 段階であり, 乱数により 1:2:4:2:1 の割合で決定される． 自分のレベルは自分には分からないという想定である.
お見合いのチャンスは15回である.
各回の相手のレベル y は 1〜5 の 5 段階であり, 乱数により 1:2:4:2:1 の割合で決定される．
各回の相手に yes と言うか no と言うかは, それが何回目のお見合いか (c) と相手のレベル (y) によって決めるものとする． これを決定する関数を int x_accept(int c, int y) とする.
相手が yes と言ってくれる確率 p は, 相手のレベル y と自分のレベル x によって決まり, p = (0.19*x)*(1.1-0.1*y) であるものとする.
両方が yes の場合に結婚が成立する (それ以上のお見合いはしない).
ひとまず,

int x_accept(int c, int y) {return 1;}
として, このお見合いのシミュレーションを 100 回行って，結婚できる確率と, 結婚できる相手のレベルの期待値 (ただし，結婚できなかった場合のレベルは-5 とする) を求めるプログラムを作成せよ. 次に, 期待値をできるだけ大きくできるような x_accept を考えよ (例えば，最初の5回は相手のレベルが4以上で,それ以降は誰でも yes と言う等).

結果
結婚率: 0.25
期待値: -2.99


[課題 R の感想]
問題を読み取って言語化するのが難しかった。
また、Cの文法が忘れていたので教科書で復習しながら進めたため、時間がかかってしまった。これからは、Cの文法を忘れないようにしていきたい。